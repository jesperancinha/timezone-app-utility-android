apply plugin: 'com.android.application'
apply plugin: 'jacoco'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '8.0.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    google()
}

android {
    compileSdkVersion 31

    lint {
        baseline = file("lint-baseline.xml")
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 31
        versionCode 2
        versionName "2.0"
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

tasks.withType(Test) {
    reports {
        html.enabled false
    }
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}

task jacocoTestReport(type: JacocoReport, dependsOn: tasks.withType(Test)) {
    reports {
        xml.required = true
        csv.required = false
        html.required = false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'org.jesperancinha.itf:itf-chartizate-api:5.0.1'
    implementation 'com.android.support:multidex:1.0.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.3.1'
    androidTestImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    androidTestImplementation 'org.assertj:assertj-core:3.22.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'org.mockito:mockito-android:4.3.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestUtil 'androidx.test:orchestrator:1.4.1'
}
